{"componentChunkName":"component---src-templates-post-tsx","path":"/2016/09/06/contenedores-unicamente-de-volumenes-en-docker-volume-only-containers/","webpackCompilationHash":"e22ffd6bcc87f8bf1604","result":{"data":{"markdownRemark":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"En estos dias estuve trabajando mucho con Docker para diversos proyectos, aprendiendo mucho en el camino, y note que hay un tema particular que me costo digerir."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Los volumenes compartidos entre containers que necesitan permanecer en una ubicacion determinada del host son soportados de una manera extraña que se da casi por casualidad."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Es decir, si quiero que mi container bindee una carpeta a una carpeta del host, esto es muy sencillo si quiero hacerlo para un solo container, basta con un argumento a docker run, como el siguiente"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["bash"]},"children":[{"type":"text","value":"docker run -it -v /etc:/etc coreos/apache /bin/bash\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Pero que tal si quiero que esto suceda en varios servicios y a su vez utilizando docker-compose?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Bueno esto tampoco es dificil, por ejemplo algo asi"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["yaml"]},"children":[{"type":"text","value":"version: '2'\nservices:\n  webserver:\n    image: coreos/apache\n    volumes:\n      - /etc:/etc\n  app2:\n    build: .\n    volumes:\n      - /etc:/etc\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Podriamos utilizar los ‘named’ volumes a nivel service para compartirlos, pero en ese caso no estariamos especificando el volume del host."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Ahora bien, si este patron de mapeo de volumenes lo utilizamos varias veces, uno tiende a reutilizar el codigo, y aqui es donde he encontrado este patron muy utilizado que queria señalar:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["yaml"]},"children":[{"type":"text","value":"version: '2'\nservices:\n  data:\n    image: tianon/true\n    volumes:\n      - /etc:/etc\n  webserver:\n    image: coreos/apache\n    volumes_from:\n      - data\n  app2:\n    build: .\n    volumes_from:\n      - data\n  app3:\n    image: postgres\n    volumes_from:\n      - data\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Bueno aqui ven el patron al que me refiero. Es extraño porque hay incluso imagenes en docker hub que son “fake” solo para generar esto (como la indicada, tianon/true). Si bien la idea del comando es realmente tomar los volumenes de otro container, esto lo he visto muchisimo, y es usado porque de esta manera queda mas significativo el mapeo que tomandolo de un container X particularmente (es decir queda mas claro al tomar volumes from ‘data’ que tomarlos de ‘webserver’) y bueno porque de docker te dicen que lo hagas asi."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Creo que vale la pena señalarlo ya que me costo mucho entender que en la version 2 del docker compose esto no tiene nada que ver con los volumenes (que estan pensados para compartir volumenes entre containers) y buscando en internet no suelen encontrarse tan facilmente desde este punto de vista, sino que uno tiene que “deducir” que esta es la “mejor” forma de utilizarlo, y entonces buscarlo de esta manera (volume only container o data volume container), porque en realidad esto si esta documentado "},{"type":"element","tagName":"a","properties":{"href":"https://docs.docker.com/engine/tutorials/dockervolumes/#/creating-and-mounting-a-data-volume-container"},"children":[{"type":"text","value":"aqui"}]},{"type":"text","value":" y es uno de los pocos casos de uso que no cubre el nuevo volumes (segun "},{"type":"element","tagName":"a","properties":{"href":"https://github.com/docker/docker/issues/17798"},"children":[{"type":"text","value":"este issue"}]},{"type":"text","value":")."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Como conclusion final vale la pena entonces destacar que en la version 2 del docker compose esto sigue utilizandose de la misma manera que la primer version, mas alla de la adicion de los volumes al YAML."}]}],"data":{"quirksMode":false}},"timeToRead":2,"frontmatter":{"date":"September 07, 2016","url":"/2016/09/06/contenedores-unicamente-de-volumenes-en-docker-volume-only-containers/","title":"Contenedores unicamente de volumenes en docker (volume only containers)","author":"nico","categories":["Experiencias"],"tags":["containers","docker","only","volume"],"type":null,"version":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}