{"version":3,"file":"component---src-pages-posts-tsx-b1412fca5607387ea4fd.js","mappings":"4MAYO,SAASA,EAAT,GAAiE,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,WAChD,OACE,QAACC,EAAD,CAAWH,OAAQA,GAAS,GAAK,GAC9BC,EAAYG,QAAS,QAACC,EAAA,EAAD,CAAgBC,IAAKL,EAAYG,SACvD,QAACG,EAAD,MACE,QAAC,IAAD,CACEC,GAAIP,EAAYQ,IAChBC,OAA6B,iBAArBT,EAAYU,KACpBC,QAAQ,GAEPX,EAAYY,SAGjB,QAACC,EAAD,SACIZ,EADJ,eAC0B,mBACvBD,EAAYc,OAFf,KAEyB,KACvB,gBAAMC,SAAUf,EAAYgB,MAAOhB,EAAYgB,OAC/C,mBACChB,EAAYiB,SAAZ,IAA2BjB,EAAYiB,QACvCjB,EAAYkB,QAAS,eAAKC,MAAO,CAAEC,MAAO,UAArB,WAW9B,IAAMlB,EAAYmB,EAAAA,EAAAA,QAAH,wGAGC,gBAAGtB,EAAH,EAAGA,MAAH,SAAUuB,MAChBC,QAAQC,QAAQzB,MAIpBO,GAASe,EAAAA,EAAAA,GAAE,KAAFA,CAAH,8CAINR,GAASQ,EAAAA,EAAAA,GAAE,IAAFA,CAAO,CACpBI,UAAW,OACXL,MAAO,SC7CM,SAASM,EAAT,GAAiC,IAAhBC,EAAe,EAAfA,KAC9B,OACE,QAAC,EAAD,KACGA,EAAKC,kBAAkBC,MAAMC,KAAI,SAACC,EAAMC,GAAP,OAChC,QAAC,cAAD,CAAgBC,IAAKF,EAAKG,KAAKlC,YAAYQ,MACzC,QAACV,EAAD,CACEC,MAAOiC,EACP/B,WAAY8B,EAAKG,KAAKjC,WACtBD,YAAa+B,EAAKG,KAAKlC,cAExBgC,EAAML,EAAKC,kBAAkBC,MAAMM,SAAU,QAACC,EAAD,WAOxD,IAAMlC,GAAYmB,EAAAA,EAAAA,GAAE,UAAFA,CAAa,CAC7BgB,QAAS,OACTC,cAAe,SACfC,eAAgB,iBAGZH,GAAMf,EAAAA,EAAAA,GAAE,MAAFA,CAAS,CACnBmB,KAAM,c,8EC7BO,SAASpC,EAAT,GAAyC,IAAfC,EAAc,EAAdA,IACvC,OACE,QAACH,EAAD,MACE,kBACEuC,MAAM,MACNC,OAAO,MACPrC,IAAKA,EACLsC,YAAY,IACZC,MAAM,0EACNC,iBAAe,KAMvB,IAAM3C,GAAYmB,EAAAA,EAAAA,GAAE,MAAFA,GAAA,GAChByB,SAAU,WACVC,cAAe,SACfC,WAAY,GACZN,OAAQ,EACRO,SAAU,SACVC,YAAa,EACbC,aAAc,IACb,yBAA0B,CACzBL,SAAU,WACVM,IAAK,EACLC,KAAM,EACNZ,MAAO,OACPC,OAAQ,QAbM,K,uECRlB,UANkB,SAAC,GAAD,IAAGf,EAAH,EAAGA,KAAH,OAChB,QAAC,IAAD,MACE,QAAC,IAAD,CAAOA,KAAMA","sources":["webpack://personal-blog/./src/components/Post/compact.tsx","webpack://personal-blog/./src/components/Posts/index.tsx","webpack://personal-blog/./src/components/VideoContainer/index.tsx","webpack://personal-blog/./src/pages/posts.tsx"],"sourcesContent":["import SiteLink from \"src/components/Link\"\nimport VideoContainer from \"src/components/VideoContainer\"\nimport { Theme } from \"src/themes/light\"\nimport { PostFrontmatter } from \"src/utils/types\"\nimport { g, React } from \"src/utils/view\"\n\ntype Props = {\n  timeToRead: number\n  frontmatter: PostFrontmatter\n  index?: number\n}\n\nexport function CompactPost({ index, frontmatter, timeToRead }: Props) {\n  return (\n    <Container index={(index || 0) % 4}>\n      {frontmatter.video && <VideoContainer src={frontmatter.video} />}\n      <Header>\n        <SiteLink\n          to={frontmatter.url}\n          newTab={frontmatter.type === \"remark-slide\"}\n          isText={false}\n        >\n          {frontmatter.title}\n        </SiteLink>\n      </Header>\n      <Footer>\n        ({timeToRead} min read) <br />\n        {frontmatter.author} -{\" \"}\n        <time dateTime={frontmatter.date}>{frontmatter.date}</time>\n        <br />\n        {frontmatter.version && `v${frontmatter.version}`}\n        {frontmatter.draft && <div style={{ color: \"green\" }}>draft</div>}\n      </Footer>\n    </Container>\n  )\n}\n\ntype ContainerProps = {\n  index: number\n  theme?: Theme\n}\n\nconst Container = g.article<ContainerProps>`\n  display: flex;\n  flex-direction: column;\n  box-shadow: ${({ index, theme }: ContainerProps & { theme: Theme }) =>\n    theme.compact.shadows[index]};\n  padding: 5,\n`\n\nconst Header = g(\"h1\")`\n  line-height: 40px;\n`\n\nconst Footer = g(\"p\")({\n  textAlign: \"left\",\n  color: \"gray\",\n})\n","import { AllMarkdownRemark, PostFrontmatter } from \"src/utils/types\"\nimport { g, React } from \"src/utils/view\"\n\nimport { CompactPost } from \"../Post/compact\"\n\ntype Props = {\n  data: {\n    allMarkdownRemark: AllMarkdownRemark<PostFrontmatter>\n  }\n}\n\nexport default function Posts({ data }: Props) {\n  return (\n    <Container>\n      {data.allMarkdownRemark.edges.map((edge, idx) => (\n        <React.Fragment key={edge.node.frontmatter.url}>\n          <CompactPost\n            index={idx}\n            timeToRead={edge.node.timeToRead}\n            frontmatter={edge.node.frontmatter}\n          />\n          {idx < data.allMarkdownRemark.edges.length && <Gap />}\n        </React.Fragment>\n      ))}\n    </Container>\n  )\n}\n\nconst Container = g(\"article\")({\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"space-around\",\n})\n\nconst Gap = g(\"div\")({\n  flex: \"0 0 20px\",\n})\n","import { g, React } from \"src/utils/view\"\n\ntype Props = {\n  src: string\n}\n\nexport default function VideoContainer({ src }: Props) {\n  return (\n    <Container>\n      <iframe\n        width=\"560\"\n        height=\"315\"\n        src={src}\n        frameBorder=\"0\"\n        allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen\n      />\n    </Container>\n  )\n}\n\nconst Container = g(\"div\")({\n  position: \"relative\",\n  paddingBottom: \"56.25%\",\n  paddingTop: 20,\n  height: 0,\n  overflow: \"hidden\",\n  marginLeft: -3,\n  marginRight: -4,\n  [\"iframe, object, embed\"]: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n  },\n})\n","import { graphql } from \"gatsby\"\nimport Layout from \"src/components/Layout\"\nimport Posts from \"src/components/Posts\"\nimport { React } from \"src/utils/view\"\n\ntype Props = any\n\nconst IndexPage = ({ data }: Props) => (\n  <Layout>\n    <Posts data={data} />\n  </Layout>\n)\n\nexport default IndexPage\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: {\n        frontmatter: {\n          type: { eq: null }\n          draft: { ne: true }\n          archived: { ne: true }\n        }\n      }\n    ) {\n      edges {\n        node {\n          id\n          timeToRead\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            url\n            title\n            author\n            draft\n            categories\n            tags\n            type\n            version\n            video\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["CompactPost","index","frontmatter","timeToRead","Container","video","VideoContainer","src","Header","to","url","newTab","type","isText","title","Footer","author","dateTime","date","version","draft","style","color","g","theme","compact","shadows","textAlign","Posts","data","allMarkdownRemark","edges","map","edge","idx","key","node","length","Gap","display","flexDirection","justifyContent","flex","width","height","frameBorder","allow","allowFullScreen","position","paddingBottom","paddingTop","overflow","marginLeft","marginRight","top","left"],"sourceRoot":""}